// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Videotheque.databaseAccess;

namespace Videotheque.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("Videotheque.models.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("SaisonId");

                    b.Property<string>("Titre");

                    b.HasKey("Id");

                    b.HasIndex("SaisonId");

                    b.ToTable("Episode");
                });

            modelBuilder.Entity("Videotheque.models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("Videotheque.models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Affiche");

                    b.Property<int>("AgeMin");

                    b.Property<bool>("Audiodescription");

                    b.Property<string>("Commentaire");

                    b.Property<DateTime>("DateCreation");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("LangueMedia");

                    b.Property<int>("LangueVO");

                    b.Property<int>("Note");

                    b.Property<int>("Statut");

                    b.Property<bool>("SupportNumerique");

                    b.Property<bool>("SupportPhysique");

                    b.Property<string>("Synopsis");

                    b.Property<string>("Titre");

                    b.HasKey("Id");

                    b.ToTable("Media");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Media");
                });

            modelBuilder.Entity("Videotheque.models.MediaGenre", b =>
                {
                    b.Property<int>("GenreId");

                    b.Property<int>("MediaId");

                    b.HasKey("GenreId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("MediaGenre");
                });

            modelBuilder.Entity("Videotheque.models.MediaPersonne", b =>
                {
                    b.Property<int>("PersonneId");

                    b.Property<int>("MediaId");

                    b.Property<int>("Fonction");

                    b.Property<string>("Role");

                    b.HasKey("PersonneId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("MediaPersonne");
                });

            modelBuilder.Entity("Videotheque.models.Personne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Civilite");

                    b.Property<int>("Nationalite");

                    b.Property<string>("Nom");

                    b.Property<byte[]>("PhotoProfil");

                    b.Property<string>("Prenom");

                    b.HasKey("Id");

                    b.ToTable("Personne");
                });

            modelBuilder.Entity("Videotheque.models.Film", b =>
                {
                    b.HasBaseType("Videotheque.models.Media");

                    b.Property<TimeSpan>("Duree");

                    b.HasDiscriminator().HasValue("Film");
                });

            modelBuilder.Entity("Videotheque.models.Saison", b =>
                {
                    b.HasBaseType("Videotheque.models.Media");

                    b.Property<int>("Duree")
                        .HasColumnName("Saison_Duree");

                    b.Property<int>("NbSaison");

                    b.HasDiscriminator().HasValue("Saison");
                });

            modelBuilder.Entity("Videotheque.models.Episode", b =>
                {
                    b.HasOne("Videotheque.models.Saison", "Saison")
                        .WithMany("Episodes")
                        .HasForeignKey("SaisonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Videotheque.models.MediaGenre", b =>
                {
                    b.HasOne("Videotheque.models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Videotheque.models.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Videotheque.models.MediaPersonne", b =>
                {
                    b.HasOne("Videotheque.models.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Videotheque.models.Personne", "Personne")
                        .WithMany()
                        .HasForeignKey("PersonneId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
